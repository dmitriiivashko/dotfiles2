# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# BREW
eval "$(/opt/homebrew/bin/brew shellenv)"
export PATH="/usr/local/sbin:/usr/local/bin:$PATH"

# EDITOR
export EDITOR="nvim"

# COMPINIT
autoload -Uz compinit
compinit

# ANTIDOTE
source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh
antidote load

# POWERLEVEL10k
source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme
source ~/.p10k.zsh

# HISTORY
HISTFILE=$HOME/.zsh_history
SAVEHIST=1000
HISTSIZE=999
setopt share_history
setopt hist_ignore_all_dups
setopt hist_expire_dups_first
setopt hist_verify

# ENCODING
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# GO
export GOPATH=$HOME/Projects/Go
export PATH="$PATH:$GOPATH/bin"

# VARS
export TERM=xterm-256color

# DIRENV
eval "$(direnv hook zsh)"

# ANDROID
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# JAVA
export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
export PATH=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home/bin:$PATH

# YANDEX CLI
if [ -f "$HOME/yandex-cloud/path.bash.inc" ]; then source "$HOME/yandex-cloud/path.bash.inc"; fi
if [ -f "$HOME/yandex-cloud/completion.zsh.inc" ]; then source "$HOME/yandex-cloud/completion.zsh.inc"; fi

# RUBY
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="/opt/homebrew/lib/ruby/gems/3.4.0/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/ruby/lib"
export CPPFLAGS="-I/opt/homebrew/opt/ruby/include"

# GCC / LLVM
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

# OPENSSL
export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"

# RUST
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/opt/homebrew/opt/rustup/bin:$PATH"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
autoload -U add-zsh-hook
load-nvmrc() {
  local nvmrc_path
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# OH MY ZSH
DISABLE_AUTO_UPDATE="true"

# FZF
source <(fzf --zsh)

# K8s
function _kgnol() {
  local NODE_NAME="$1"
  if [[ -z "$NODE_NAME" ]]; then
    echo "Usage: kgnol <node-name>"
    return 1
  fi

  kubectl get node "$NODE_NAME" \
    -o go-template='{{range $k, $v := .metadata.labels}}{{printf "%s=%s\n" $k $v}}{{end}}' \
    | column -t -s '='
}
alias kgnol='_kgnol'


# CONDA
#eval "$(conda "shell.$(basename "${SHELL}")" hook)"


# Added by LM Studio CLI (lms)
export PATH="$PATH:$HOME/.lmstudio/bin"

# Added by Windsurf
export PATH="$PATH:$HOME/.codeium/windsurf/bin"

export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
